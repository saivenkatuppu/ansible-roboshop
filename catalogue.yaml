- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
   - name: remove default nodejs
     ansible.builtin.command: dnf module disable nodejs -y
   - name: enable nodejs:20
     ansible.builtin.command: dnf module enable nodejs:20 -y


   - name: installing nodejs
     ansible.builtin.dnf:
      name: nodejs
      state: present

   - name: create system user
     ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

   - name: create directory
     ansible.builtin.file:
      path: /app
      state: directory

   - name: downloading url
     ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

   - name: extract catalogue code
     ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app 
      remote_src: yes
   - name: installing npm
     community.general.npm:
      path: /app
    
   - name: copying module
     ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service   

   - name: demon reload 
     ansible.builtin.systemd_service:
      demon_reload: true  
   - name: enable the catalogue
     ansible.builtin.service:
       name: catalogue
       state: started
       enabled: yes

   - name: copy mongodb repo
     ansible.builtin.copy:
       src: mongo.repo
       dest: /etc/yum.repos.d/mongo.repo

   - name: install mongodb client
     ansible.builtin.dnf:
      name:  mongodb-mongosh -y
      state: present   


   - name: check products loaded or not
     ansible.builtin.command: mongosh --host mongodb.calvio.store --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
     register: catalogue_output

   - name: print catalogue output
     ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

   - name: load products/
     ansible.builtin.shell: mongosh --host mongodb.calvio.store < /app/db/master-data.js
     when: catalogue_output.stdout | int < 0